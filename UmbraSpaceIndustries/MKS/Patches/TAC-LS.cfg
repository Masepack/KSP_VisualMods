@PART[*_AgModule]:NEEDS[TACLifeSupport]
{
	@MODULE[ModuleResourceConverter_USI,Agroponics]
	{
		// Get original input of mulch and output of supplies and compute the equivalent number of Kerbals

		%MulchIn = #$INPUT_RESOURCE:HAS[#ResourceName[Mulch]]/Ratio$
		@MulchIn /= #$@LIFE_SUPPORT_SETTINGS/WasteAmount$
		%SuppliesOut = #$OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]/Ratio$
		@SuppliesOut /= #$@LIFE_SUPPORT_SETTINGS/SupplyAmount$

		// Now change to the same equivalent number of Kerbals for TAC-LS resources
		@INPUT_RESOURCE:HAS[#ResourceName[Mulch]]
		{
			@ResourceName = Waste
			@Ratio = #$../MulchIn$
			@Ratio *= 0.000001539351852
		}
		INPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = #$../MulchIn$
			@Ratio *= 0.000014247685185 
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = #$../MulchIn$
			@Ratio *= 0.00148012889876 
		}

		@OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]
		{
			@ResourceName = Food
			@Ratio = #$../SuppliesOut$
			@Ratio *= 0.000016927083333 

			%DumpExcess = True
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.000011188078704 

			%DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.001713537562385 

			%DumpExcess = True
		}
	}
}

@PART[*_Agriculture|*_Agriculture250|*_Agriculture375]:NEEDS[TACLifeSupport]
{
	@MODULE[ModuleResourceConverter_USI]:HAS[#ConverterName[Agroponics]]
	{
		// Get original input of mulch and output of supplies and compute the equivalent number of Kerbals

		%MulchIn = #$INPUT_RESOURCE:HAS[#ResourceName[Mulch]]/Ratio$
		@MulchIn /= #$@LIFE_SUPPORT_SETTINGS/WasteAmount$
		%SuppliesOut = #$OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]/Ratio$
		@SuppliesOut /= #$@LIFE_SUPPORT_SETTINGS/SupplyAmount$

		// Now change to the same equivalent number of Kerbals for TAC-LS resources
		@INPUT_RESOURCE:HAS[#ResourceName[Mulch]]
		{
			@ResourceName = Waste
			@Ratio = #$../MulchIn$
			@Ratio *= 0.000001539351852
		}
		INPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = #$../MulchIn$
			@Ratio *= 0.000014247685185 
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = #$../MulchIn$
			@Ratio *= 0.00148012889876 
		}

		@OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]
		{
			@ResourceName = Food
			@Ratio = #$../SuppliesOut$
			@Ratio *= 0.000016927083333 

			%DumpExcess = True
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.000011188078704 

			%DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.001713537562385 

			%DumpExcess = True
		}
	}
	
	@MODULE[ModuleResourceConverter_USI]:HAS[#ConverterName[Cultivate?S?]]
	{
		// Get original input of mulch and output of supplies and compute the equivalent number of Kerbals

		%SuppliesOut = #$OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]/Ratio$
		@SuppliesOut /= #$@LIFE_SUPPORT_SETTINGS/SupplyAmount$

		@OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]
		{
			@ResourceName = Food
			@Ratio = #$../SuppliesOut$
			@Ratio *= 0.000016927083333 

			%DumpExcess = True
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.000011188078704 

			%DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.001713537562385 

			%DumpExcess = True
		}
	}
	
	@MODULE[ModuleResourceConverter_USI]:HAS[#ConverterName[Cultivate?D?]]
	{
		// Get original input of mulch and output of supplies and compute the equivalent number of Kerbals

		%SuppliesOut = #$OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]/Ratio$
		@SuppliesOut /= #$@LIFE_SUPPORT_SETTINGS/SupplyAmount$


		@OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]
		{
			@ResourceName = Food
			@Ratio = #$../SuppliesOut$
			@Ratio *= 0.000016927083333 

			%DumpExcess = True
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.000011188078704 

			%DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.001713537562385 

			%DumpExcess = True
		}
	}
}

@PART[*_Aeroponics]:NEEDS[TACLifeSupport]
{
	@MODULE[ModuleResourceConverter_USI,Cultivator]
	{
		%SuppliesOut = #$OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]/Ratio$
		@SuppliesOut /= #$@LIFE_SUPPORT_SETTINGS/SupplyAmount$

		@OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]
		{
			@ResourceName = Food
			@Ratio = #$../SuppliesOut$
			@Ratio *= 0.000016927083333 
 
			%DumpExcess = True
		}
		// Maybe better to reduce water consumption by this amount? But it doesn't really matter...
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.000011188078704 
			%DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.001713537562385 
			%DumpExcess = True
		}
	}
}
@PART[*]:HAS[@MODULE[ModuleLifeSupportRecycler]]:NEEDS[TACLifeSupport]
{
	@MODULE[ModuleLifeSupportRecycler]
	{
		// Change module to a regular resource converter
		@name = ModuleResourceConverter_USI

		INPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = #$../CrewCapacity$
			@Ratio *= 0.000001539351852
		}
		INPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = #$../CrewCapacity$
			@Ratio *= 0.000014247685185 
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = #$../CrewCapacity$
			@Ratio *= 0.00148012889876 
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Food
			Ratio = #$../CrewCapacity$
			@Ratio *= #$../RecyclePercent$
			@Ratio *= 0.000016927083333 
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../CrewCapacity$
			@Ratio *= #$../RecyclePercent$
			@Ratio *= 0.000011188078704 
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../CrewCapacity$
			@Ratio *= #$../RecyclePercent$
			@Ratio *= 0.001713537562385 
			DumpExcess = True
		}
	}	
}