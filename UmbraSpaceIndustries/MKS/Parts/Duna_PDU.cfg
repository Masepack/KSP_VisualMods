PART
{
	name = Duna_PDU
	module = Part
	author = RoverDude
	MODEL
	{
		model = UmbraSpaceIndustries/MKS/Assets/DunaGeneric
		texture = Decal_02, UmbraSpaceIndustries/MKS/Assets/Decal_08
		texture = Decal_02_Glow, UmbraSpaceIndustries/MKS/Assets/Decal_08_Glow
		texture = sw_02, UmbraSpaceIndustries/MKS/Assets/sw_08
	}
	rescaleFactor = 1
	scale = 1

	node_stack_pod01 = 1.0,-.14,  0,  1,0,0,1
	node_stack_pod02 = -1.0,-.14,  0, -1,0,0,1
	node_stack_pod03 = 0,  -.14,   1,  0,0,1,1
	node_stack_pod04 = 0,  -.14,  -1, 0,0,-1,1

	node_stack_pod05 = 1.29, -.14,   0,  1,0,0,1
	node_stack_pod06 = -1.29,-.14,   0, -1,0,0,1
	node_stack_pod07 = 0,   -.14, 1.29,  0,0,1,1
	node_stack_pod08 = 0,   -.14,-1.29, 0,0,-1,1


	node_stack_top = 0.0, -0.7, 0.0, 0.0, -1.0, 0.0,3
	node_stack_bottom = 0.0, 1.925, 0.0, 0.0, 1.0, 0.0,2
	TechRequired = advConstruction
	entryCost = 8000
	cost = 10000
	category = none
	subcategory = 0
	title = MKS 'Duna' Power Distribution Unit
	manufacturer = USI - Kolonization Division
	description = This module is outfitted to provide long range power distribution, including large battery stores, and a small nuclear power plant.  Radiators not included.

	tags = USI MKS Duna Crew Hatch ?eva ?iva Control command base lander colony power electr distrib nuc reactor core thermal heat ScienceContainer logistics generat Kerbal Distribute PDU EnrichedUranium DepletedFuel XenonGas ElectricCharge e/c

	attachRules =1,0,1,1,0
	mass = 4.325
	dragModelType = default
	maximum_drag = 0.25
	minimum_drag = 0.25
	angularDrag = .5
	crashTolerance = 12
	breakingForce = 280
	breakingTorque = 280
	maxTemp = 1700
	bulkheadProfiles = size2

	INTERNAL
	{
		name = landerCabinInternals
	}

	MODULE
	{
		name = ModuleScienceContainer
		reviewActionName = Review Data
		storeActionName = Store Experiments
		collectActionName = Take Data
		evaOnlyStorage = True
		storageRange = 2
		allowRepeatedSubjects = True
	}

	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = Light
		actionGUIName = Toggle Lights
		startEventGUIName = Lights On
		endEventGUIName = Lights Off
	}

	CrewCapacity = 2
	vesselType = Base

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 1
		RESOURCE
		{
			name=ElectricCharge
			rate = 0.02777778
		}
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 15000
		maxAmount = 15000
		isTweakable = true
	}

	MODULE
	{
		name = USIAnimation
		animationName = Deploy
	}

	MODULE
	{
		name = ModuleLifeSupport
	}

	MODULE
	{
		name = MKSModule
	}

	MODULE
	{
		name = ModulePowerCoupler
	}

	MODULE
	{
		name = ModulePowerDistributor
	}

	//*********************
	MODULE
	{
		name = ModuleOverheatDisplay
	}

	MODULE
	{
		name = ModuleResourceConverter_USI
		ConverterName = Reactor
		StartActionName = Start Reactor
		StopActionName = Stop Reactor
		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.000003
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.000002
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = XenonGas
			Ratio = 0.000001
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 750
			DumpExcess = false
		}

		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 1000000
			key = 750 100000
			key = 1000 10000
			key = 1250 5000
			key = 2000 100
			key = 4000 0
		}
		GeneratesHeat = true
		DefaultShutoffTemp = .8
		ThermalEfficiency
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0
		}
	}

	RESOURCE
	{
	 name = EnrichedUranium
	 amount = 10
	 maxAmount = 10
	}
	RESOURCE
	{
	 name = DepletedFuel
	 amount = 0
	 maxAmount = 10
	}

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 1000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 4000				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 2000					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = USI_ModuleFieldRepair
	}

	MODULE
	{
		name = ModuleWeightDistributor
	}
	
	MODULE
	{
		name = USI_InertialDampener
	}
}
