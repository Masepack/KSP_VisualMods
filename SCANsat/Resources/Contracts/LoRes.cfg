CONTRACT_TYPE
{
	name = SCAN_LoRes
	title = Do a Low Resolution Scan of @/targetBody1
	genericTitle = Do a Low Resolution Scan of a body.
	group = ScanSatOfficial
	topic = Science
	subject = Kerbal
	motivation = Scanning
	agent = SCAN: Scientific Committee on Advanced Navigation
	notes = Scanning can take place while the vessel is not loaded.
	synopsis = Perform a RADAR scan of @/targetBody1
	completedMessage = Excellent work, despite the grainy monochrome image we've recovered our experts are very excited to see what they can find.
	minExpiry = 1
	maxExpiry = 7
	deadline = Random(300, 500) * @/targetBody1.Multiplier()
	cancellable = true
	declinable = true
	autoAccept = false
	targetBody = @/targetBody1
		
	// Contract rewards
	rewardScience = 0
	rewardReputation = 1
	rewardFunds = Random(40000, 60000.0)
	failureReputation = 1
	failureFunds = Random(1000, 10000.0)
	advanceFunds = Random(2000, 10000.0)
	prestige = Trivial	
	prestige = Significant
	
	DATA
	{
		type = CelestialBody
		requiredValue = true
		uniquenessCheck = CONTRACT_ALL
		targetBody1 = Prestige() == Trivial ? @ScanSatOfficial:p1Bodies.SelectUnique() : @ScanSatOfficial:p2Bodies.SelectUnique()
		title = Must have orbited the target body.
	}
	
	DATA
	{
		type = double
		
		diffModifier1 = Prestige() == Trivial ? 0 : 10
		scanRequired1 = 75 + @diffModifier1
		minScan1 = 70 + @diffModifier1
	}	
		
	PARAMETER
	{
		name = SCANsatCoverage
		type = SCANsatCoverage
		targetBody = @/targetBody1
		coverage = @/scanRequired1
		scanType = AltimetryLoRes
	}
	REQUIREMENT
	{
		name = SCANsatCoverage
		type = SCANsatCoverage
		targetBody = @/targetBody1
		minCoverage = 0.0
		maxCoverage = @/minScan1
		scanType = AltimetryLoRes
		title = Must have scanned less than @/minScan1% of the target body.
	}
	REQUIREMENT
	{
		name = Orbit
		type = Orbit

		targetBody = HomeWorld()
	}
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = SCANsat_Scanner
	}
}