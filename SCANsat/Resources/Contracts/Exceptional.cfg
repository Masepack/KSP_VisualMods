CONTRACT_TYPE
{
	name				= SCAN_Exceptional
	title				= #autoLOC_SCANsat_exceptional0001
	genericTitle		= #autoLOC_SCANsat_exceptional0002
	group				= ScanSatOfficial
	topic				= Science
	subject				= Kerbal
	agent				= #autoLOC_SCANsat_Agents_Name
	notes				= #autoLOC_SCANsat_exceptional0003
	synopsis			= #autoLOC_SCANsat_exceptional0004
	completedMessage	= #autoLOC_SCANsat_exceptional0005
	minExpiry			= 1
	maxExpiry			= 7
	deadline			= Random(300, 500) * @/targetBodyValid3.Multiplier()
	cancellable			= true
	declinable			= true
	autoAccept			= false
	targetBody			= @/targetBodyValid3
		
	// Contract rewards
	rewardScience		= 0
	rewardReputation	= 1
	rewardFunds			= Random(60000, 80000.0)
	failureReputation	= 1
	failureFunds		= Random(1000, 10000.0)
	advanceFunds		= Random(10000, 20000.0)
	prestige			= Exceptional
	
    DATA_EXPAND
	{
		type			= CelestialBody
		targetBody3		= @ScanSatOfficial:nonHomeBodies
	}
	
	DATA
	{
		type			= CelestialBody
		requiredValue		= true
		uniquenessCheck		= CONTRACT_ALL
		targetBodyValid3	= @/targetBody3
	}
	
	DATA
	{
		type			= List<CelestialBody>
		requiredValue		= false
		targetBodyList3		= @ScanSatOfficial:p3Bodies
		targetBodyList4		= @ScanSatOfficial:p4Bodies
	}

	PARAMETER
	{
		name			= SCANsatCoverage_1
		type			= SCANsatCoverage
		targetBody		= @/targetBodyValid3
		coverage		= 95
		scanType		= AltimetryHiRes
	}
	PARAMETER
	{
		name			= SCANsatCoverage_2
		type			= SCANsatCoverage
		targetBody		= @/targetBodyValid3
		coverage		= 95
		scanType		= Ore
	}
	REQUIREMENT
	{
		name			= AnyCoverage
		type			= Any
		
		REQUIREMENT
		{
			name		= SCANsatCoverage_1
			type		= SCANsatCoverage
			targetBody	= @/targetBodyValid3
			minCoverage	= 0.0
			maxCoverage	= 90
			scanType	= AltimetryHiRes
			title		= #autoLOC_SCANsat_exceptional0006
		}
		REQUIREMENT
		{
			name		= SCANsatCoverage_2
			type		= SCANsatCoverage
			targetBody	= @/targetBodyValid3
			minCoverage	= 0.0
			maxCoverage	= 90
			scanType	= Ore
			title		= #autoLOC_SCANsat_exceptional0007
		}
	}
	REQUIREMENT
	{
		name			= Expression_1
		type			= Expression
		title			= #autoLOC_SCANsat_exceptional0008
		expression		= (@/targetBodyList3.Contains(@/targetBodyValid3) || @/targetBodyList4.Contains(@/targetBodyValid3))			== true
	}
	REQUIREMENT
	{
		name			= Orbit
		type			= Orbit
		targetBody		= HomeWorld()
	}
	REQUIREMENT
	{
		name			= PartUnlocked_1
		type			= PartUnlocked
		part			= SCANsat_Scanner2
	}
	REQUIREMENT
	{
		name			= PartUnlocked_2
		type			= PartUnlocked
		part			= OrbitalScanner
	}
}