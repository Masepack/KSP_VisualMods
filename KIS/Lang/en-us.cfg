// Auto generated by KSPDev Localization tool at: 9/2/2017 1:36:15 AM
// Total strings: 231
// Total words: 1188
// Version: 1
// Do NOT change the version unless a new string is added or an existing one was deleted.
// A simple string update is not a new version! The version number is used to keep all
// the localizations in sync. The EN-US localization file is the primary file, and all the
// other languages should catch-up as the version is increasing.
Localization
{
	en-us
	{

		// ********** Part: KIS.basketball

		#KIS_basketball_Part_description = A great tool to try gravitationals experimentations.
		#KIS_basketball_Part_manufacturer = KIS
		#KIS_basketball_Part_tags = cck-eva-items
		#KIS_basketball_Part_title = Basket Ball

		// ********** Part: KIS.beer

		#KIS_beer_Part_description = A tasty and affordable beer. Every thougfull space agency manager should definitly offers some to their grateful crew to keep moral and motivation high.
		#KIS_beer_Part_manufacturer = KIS
		#KIS_beer_Part_tags = cck-eva-items
		#KIS_beer_Part_title = Bub's Beer
		#KIS_beer_Part_useName = Drink

		// ********** Part: KIS.bomb1

		#KIS_bomb1_Part_description = Need to get rid of those annoying debris without de-orbiting? We got what you need. Remember, you can setup explosives by right clicking on the part.
		#KIS_bomb1_Part_manufacturer = KIS
		#KIS_bomb1_Part_tags = KIS EVA portable tool destruction bomb cck-eva-items
		#KIS_bomb1_Part_title = K4 Standard Explosives

		// ********** Part: kis.concreteBase1

		#kis_concreteBase1_Part_description = A concrete base to attach parts on. Through a miracle of science, engineers have found out how to attach it to the ground with a screwdriver or wrench.
		#kis_concreteBase1_Part_manufacturer = KIS
		#kis_concreteBase1_Part_tags = KIS EVA portable building construction concrete cck-eva-items
		#kis_concreteBase1_Part_title = CB1 Ground Base

		// ********** Part: KIS.Container1

		#KIS_Container1_Part_description = A small container for storing smaller parts. Kerbal engineers realized that having a place to store spare parts is way better than have them floating around the command pods.
		#KIS_Container1_Part_manufacturer = KIS
		#KIS_Container1_Part_tags = KIS container inventory portable cck-containers
		#KIS_Container1_Part_title = SC-62 Portable Container

		// ********** Part: KIS.Container2

		#KIS_Container2_Part_description = The ILC-18k is an in-line container designed to be accessible from the inside of a ship and remove the need to go EVA to access spare hardware. However as it is pressurized, the ILC-18k has an extra mass compared to other containers and doesn't have dedicated mount.
		#KIS_Container2_Part_manufacturer = KIS
		#KIS_Container2_Part_tags = KIS container inventory cck-containers
		#KIS_Container2_Part_title = ILC-18k Container

		// ********** Part: KIS.Container3

		#KIS_Container3_Part_description = The ISC-6K is a small in-line container designed to be accessible from the inside of a ship and remove the need to go EVA to access spare hardware. However as it is pressurized, the ISC-6K has an extra mass compared to other containers and doesn't have dedicated mount.
		#KIS_Container3_Part_manufacturer = KIS
		#KIS_Container3_Part_tags = KIS container inventory cck-containers
		#KIS_Container3_Part_title = ISC-6K Container

		// ********** Part: KIS.ContainerMount1

		#KIS_ContainerMount1_Part_description = A small mount to attach, detach and reattach SC-62 containers. The best solution over struts, decoupler or duct tape.
		#KIS_ContainerMount1_Part_manufacturer = KIS
		#KIS_ContainerMount1_Part_tags = KIS EVA building portable container
		#KIS_ContainerMount1_Part_title = SM-62 Container Mount

		// ********** Part: KIS.electricScrewdriver

		#KIS_electricScrewdriver_Part_description = A tool to attach or detach parts to your vehicles. The E-SD80 as been designed to give more autonomy for our "out there" engineers.
		#KIS_electricScrewdriver_Part_manufacturer = KIS
		#KIS_electricScrewdriver_Part_tags = KIS EVA tool building portable cck-eva-items
		#KIS_electricScrewdriver_Part_title = E-SD80 Electric Screwdriver

		// ********** Part: KIS.evapropellant

		#KIS_evapropellant_Part_description = An useful EVA propellant backup tank for extravehicular activity. Right-click on it from the inventory to use. Can be refueled from a pod inventory.
		#KIS_evapropellant_Part_manufacturer = KIS
		#KIS_evapropellant_Part_tags = KIS EVA fuel portable cck-eva-items
		#KIS_evapropellant_Part_title = EVA-11 Fuel Canister
		#KIS_evapropellant_Part_useName = Refuel

		// ********** Part: KIS.ghettoblaster

		#KIS_ghettoblaster_Part_description = Killing time in long space travel or waiting rescues are not easy tasks. The Boombox (TM) should keep our kerbonauts busy.
		#KIS_ghettoblaster_Part_manufacturer = KIS
		#KIS_ghettoblaster_Part_tags = cck-eva-items
		#KIS_ghettoblaster_Part_title = Ghetto Blaster

		// ********** Part: KIS.golfclub

		#KIS_golfclub_Part_description = Another unapproved gravity experimentation is to play Mun Golf.
		#KIS_golfclub_Part_manufacturer = KIS
		#KIS_golfclub_Part_tags = cck-eva-items
		#KIS_golfclub_Part_title = Alpard Kerman's Golf club
		#KIS_golfclub_Part_useName = Swing

		// ********** Part: KIS.guide

		#KIS_guide_Part_description = Everything you need to know about Inventory system without complicated computer manoeuvre. (right click on it from inventory to read it)
		#KIS_guide_Part_manufacturer = KIS
		#KIS_guide_Part_tags = KIS inventory building book portable cck-eva-items
		#KIS_guide_Part_title = KIS for Dummies
		#KIS_guide_Part_useName = Read

		// ********** Part: KIS.guitar

		#KIS_guitar_Part_description = Space oddities sometime needs a guitar cover.
		#KIS_guitar_Part_manufacturer = KIS
		#KIS_guitar_Part_tags = cck-eva-items
		#KIS_guitar_Part_title = Davwie Kerman's Guitar

		// ********** Part: KIS.taco

		#KIS_taco_Part_description = Beef, vegetables and hot sauce in a tortilla. Everything our kerbonauts need for a zero G meals.
		#KIS_taco_Part_manufacturer = KIS
		#KIS_taco_Part_tags = cck-eva-items
		#KIS_taco_Part_title = Chradfield Kerman's Taco
		#KIS_taco_Part_useName = Eat

		// ********** Part: KIS.wrench

		#KIS_wrench_Part_description = A tool to attach or detach smallest parts to your vehicles. Nothing complicated, just a simple wrench really.
		#KIS_wrench_Part_manufacturer = KIS
		#KIS_wrench_Part_tags = KIS EVA tool building portable cck-eva-items
		#KIS_wrench_Part_title = BS-8 Utility Wrench

		// ********** Type: KIS.GUIUtils.VolumeLType, KSPDev Messages

		// Liter unit for a volume value.
		#kisLOC_99000 = \u0020L

		// ********** Type: KIS.KIS_Item, KSPDev Messages

		// The screen message to present when the item was attempted to equip, but the
		// relevant inventory slot has more than one item (stacked).
		#kisLOC_02000 = Cannot equip stacked items
		// The screen message to present when the item was attempted to equip, but its equip
		// slot is already taken by a carriable item.
		// Argument <<1>> is the name of the equip slot of the item.
		// Argument <<2>> is the name of the item being carried.
		#kisLOC_02001 = Cannot equip item, slot [<<1>>] already used for carrying <<2>>
		// The screen message to present when the item was attempted to equip, but a
		// specific kerbal trait (skill) is required to handle the item.
		// Argument <<1>> is the name of the required trait.
		#kisLOC_02002 = This item can only be used by a kerbal with the skill: <<1>>
		// The screen message to present when the item was attempted to be added to an
		// existing slot stack, but the resulted inventory volume would exceed the maximum
		// allowed volume.
		// Argument <<1>> is the excessive volume. Format: VolumeLType.
		#kisLOC_02003 = Max destination volume reached (+<<1>>)
		// The screen message to present when the item was attempted to be added to an
		// existing slot stack, but the item being added is currently equipped.
		#kisLOC_02004 = Cannot stack with equipped item

		// ********** Type: KIS.KISAddonPickup, KSPDev Messages

		// The action status to show in the tooltip when the player presses the re-dock
		// action key and the action is allowed.
		#kisLOC_01000 = Re-dock
		// The action status to show in the tooltip when the player presses the re-dock
		// action key and the action is not allowed.
		#kisLOC_01001 = Can't re-dock
		// The action status to show in the tooltip when the player presses the grab action
		// key while pointing on a root part, and the action is allowed.
		#kisLOC_01002 = Grab
		// The action status to show in the tooltip when the player presses the grab action
		// key while pointing on an child part, and the action is allowed.
		#kisLOC_01003 = Detach & Grab
		// The action status to show in the tooltip when the player presses the grab action
		// key and the action is not allowed.
		#kisLOC_01004 = Can't grab
		// The action status to show in the tooltip when the player presses the detach
		// action key and the action is allowed.
		#kisLOC_01005 = Detach
		// The action status to show in the tooltip when the player presses the detach
		// action key when a statically attached (to the ground) part is targeted, and the
		// action is allowed.
		#kisLOC_01006 = Detach from ground
		// The action status to show in the tooltip when the player attempts to detach a
		// part that cannot be detached for any reason.
		#kisLOC_01007 = Can't detach
		// The action status to show in the tooltip when the player attempts to attach a
		// part that cannot be attached for any reason.
		#kisLOC_01008 = Can't attach
		// The action status to show in the tooltip when the player attempts to grab or move
		// a too heavy part or assembly.
		#kisLOC_01009 = Too heavy
		// The action status to show in the tooltip when the player attempts to grab or move
		// a part or assembly which is too far from the acting part (e.g. an EVA kerbal).
		#kisLOC_01010 = Too far
		// The action status to show in the tooltip when the action cannot complete due to
		// the unexpected reasons.
		#kisLOC_01011 = Not supported
		// The action status to show in the tooltip when the requested action requires an
		// equipped tool on the EVA kerbal, but there was none.
		#kisLOC_01012 = Tool needed
		// The action status to show in the tooltip when the re-dock action is in the
		// process.
		// Argument <<1>> is a name of the vessel being re-docked.
		// Argument <<2>> is the total mass of the vessel. Format: MassType.
		#kisLOC_01013 = Vessel: <<1>>\nMass: <<2>>
		// The action status to show in the tooltip when a root part of the vessel is
		// targeted for an action.
		#kisLOC_01014 = Root part
		// The tooltip help string in case of the current action is dropping of a grabbed
		// part.
		// Argument <<1>> is the name of the node at which the part will be acted.
		#kisLOC_01015 = Drop (<<1>>)
		// The tooltip help string in case of the current action is attaching of a grabbed
		// part.
		// Argument <<1>> is the name of the node at which the part will be acted.
		#kisLOC_01016 = Attach (<<1>>)
		// The tooltip help string in case of the current action is re-docking of a grabbed
		// vessel.
		// Argument <<1>> is the name of the vessel which will be re-docked.
		#kisLOC_01017 = Re-dock (<<1>>)
		// The tooltip help string in case of the current action is mounting a KIS item.
		#kisLOC_01018 = Mount
		// The tooltip help string to display when the re-dock action is selected but the
		// mouse cursor is not pointing to a valid docked vessel.
		#kisLOC_01019 = No docked vessel found
		// The tooltip help string to display when the re-dock action selected but the mouse
		// cursor is not pointing any part.
		#kisLOC_01020 = Select a vessel
		// The tooltip help string to display when the player attempts to grab a kerbal
		#kisLOC_01021 = Kerbonauts can move themselves using jetpacks. Try to ask.
		// The tooltip help string to display when the player attempts to grab a too heavy
		// object.
		// Argument <<1>> is the total mass of the target object. Format: MassType.
		// Argument <<2>> is the maximum allowed mass. Format: MassType.
		#kisLOC_01022 = Bring more kerbals [<<1>> > <<2>>]
		// The tooltip help string to display when the player attempts to grab an object
		// which is too far away.
		#kisLOC_01023 = Move closer to the part
		// The tooltip help string to display when the player attempts to perfrom an attach
		// action without the proper tool equipped.
		#kisLOC_01024 = This part can't be attached without a tool
		// The tooltip help string to display when the player attempts to perfrom a detach
		// action without the proper tool equipped.
		#kisLOC_01025 = This part can't be detached without a tool
		// The tooltip help string to display when the player attempts to perfrom a detach
		// action on a ground attched part without the proper tool equipped.
		#kisLOC_01026 = This part can't be detached from the ground without a tool
		// The tooltip help string in the case when the action cannot complete due to the
		// unexpected reasons.
		#kisLOC_01027 = The function is not supported on this part
		// The tooltip help string in the case when an attach action is attempted on a part
		// which is not designed for that.
		#kisLOC_01028 = Attach function is not supported on this part
		// The tooltip help string to display when a single part was targeted for an action.
		// Agrument <<1>> is a name of the target part.
		#kisLOC_01029 = <<1>>
		// The tooltip help string to display when multiple parts was targeted for an
		// action.
		// Agrument <<1>> is a name of the target part.
		// Agrument <<2>> is the number of the children parts attached to the target.
		#kisLOC_01030 = <<1>>\nAttached parts: <<2>>
		// The tooltip help string for the key bindings to adjust the part's roll.
		// Argument <<1>> is the "adjust left" key name.
		// Argument <<2>> is the "adjust right" key name
		#kisLOC_01031 = [<<1>>][<<2>>]
		// The tooltip help string for the key bindings to adjust the part's pitch.
		// Argument <<1>> is the "adjust left" key name.
		// Argument <<2>> is the "adjust right" key name
		#kisLOC_01032 = [<<1>>][<<2>>]
		// The tooltip help string for the key bindings to adjust the part's yaw.
		// Argument <<1>> is the "adjust left" key name.
		// Argument <<2>> is the "adjust right" key name
		#kisLOC_01033 = [<<1>>][<<2>>]
		// The tooltip help string for the key bindings to adjust the part's rotation.
		// Argument <<1>> is the keys for the roll adjustment.
		// Argument <<2>> is the keys for the pitch adjustment.
		// Argument <<3>> is the keys for the yaw adjustment.
		#kisLOC_01034 = <<1>>/<<2>>/<<3>> to rotate
		// The tooltip help string for the key binding to reset all the roll and offset
		// adjustments.
		#kisLOC_01035 = [<<1>>] to reset orientation & position
		// The tooltip help string for the key binding to change the node snap mode.
		#kisLOC_01036 = [<<1>>] to change node
		// The tooltip help string for the key bindings to adjust the part's offset.
		// Argument <<1>> is the "adjust up" key name.
		// Argument <<2>> is the "adjust down" key name
		#kisLOC_01037 = [<<1>>]/[<<2>>] to move up/down
		// The tooltip help string for the key binding to switch to the attach mode.
		#kisLOC_01038 = [<<1>>] to attach
		// The tooltip help string for the key binding to cancel the operation.
		#kisLOC_01039 = [Escape] to cancel

		// ********** Type: KIS.KISAddonPointer, KSPDev Messages

		// The message to present when the selected action cannot be completed given the
		// currently grabbed part/assembly and the target at which the mouse cursor is
		// pointing.
		#kisLOC_03000 = Target object is not allowed!
		// The message to present when the selected action cannot be completed due to the
		// source and the target are the same objects.
		#kisLOC_03001 = Cannot attach on itself!
		// The message to present when a non-mountable object is attempted to be mounted.
		#kisLOC_03002 = This part is not allowed on the mount!
		// The message to present when the source object is attempted to be attached to the
		// target's surface of a part which doesn't allow this mode.
		#kisLOC_03003 = Target part doesn't allow surface attach!
		// The message to present when the source object is attempted to be attached to the
		// target's surface, but the selected node on the soucre is not 'surface'.
		#kisLOC_03004 = This node cannot be used for surface attach!
		// The message to present when the acting kerbal is too far from the part he's
		// trying to act on (source part).
		// Argument <<1>> is the actual distance between the kerbal and the source part.
		// Format: DistanceType.
		// Argument <<2>> is the maximum allowed distance. Format: DistanceType.
		#kisLOC_03005 = Too far from source: <<1>> > <<2>>
		// The message to present when the acting kerbal is too far from the point of the
		// actual action (drop or attach).
		// Argument <<1>> is the actual distance between the kerbal and the target part.
		// Format: DistanceType.
		// Argument <<2>> is the maximum allowed distance. Format: DistanceType.
		#kisLOC_03006 = Too far from target: <<1>> > <<2>>
		// The message to present when a source object is attempted to be attached to a
		// target part which is not allowed for this. This message is shown when the source
		// object can only attach to a very specific set of the vessel's part (e.g. during
		// the re-docking).
		// Argument <<1>> is the name of the target part.
		#kisLOC_03007 = Cannot attach to part: <<1>>
		// The message to present when a 'change attach node' action is requested, but the
		// source part has only one node
		#kisLOC_03008 = This part has only one attach node!

		// ********** Type: KIS.ModuleKISInventory, KSPDev Messages

		// The message to present when 'use' key is pressed, but no item is equipped in the
		// right hand of the EVA kerbal.
		#kisLOC_00000 = Cannot use equipped item because nothing is equipped
		// The message to present when EVA kerbal enters a pod which doesn't have KIS
		// inventory.
		#kisLOC_00001 = Pod <<1>> doesn't have personal inventory space
		// The message to present when EVA kerbal tries to put into inventory an assembly of
		// multiple parts.
		// Argument <<1>> is the number of the children parts atatched to the part being
		// dragged.
		#kisLOC_00002 = Cannot put an assembly into inventory: <<1>> part(s) attached
		// The message to present when an item being dragged into an inventory whichdoesn't
		// have enough free space.
		// Argument <<1>> is a value of type VolumeLType which specifies the volume which is
		// attempted to be moved.
		// Argument <<2>> is a value of type VolumeLType which specifies the exceeding
		// volume over the max inventory capacity.
		#kisLOC_00003 = Max destination volume reached: <<1>> (+<<2>>)
		// The message to present when a storage, which is being carried on a back of an EVA
		// kerbal, is attempted to be accessed.
		#kisLOC_00004 = This storage is not accessible while carried!
		// The message to present when an inventory which cannot be accessed from EVA is
		// attempted to be opened by an EVA kerbal.
		#kisLOC_00005 = This storage is not accessible from the outside!
		// The message to present when an inventory which cannot be accessed from inside the
		// vessel is attempted to be accessed while the active vessel is no an EVA kerbal.
		#kisLOC_00006 = This storage is not accessible from the inside!
		// The message to present when a remove helmet action is attempted in the atmosphere
		// which doesn't contain oxygen.
		#kisLOC_00007 = Cannot remove helmet: atmosphere does not contain oxygen!
		// The message to present when a remove helmet action is attempted in the atmosphere
		// which is not dense enough.
		// Argument <<1>> is a value of type PressureType which specifies a minimum allowed
		// pressure.
		// Argument <<2>> is a value of type PressureType which specifies the actual
		// pressure outside.
		#kisLOC_00008 = Cannot remove helmet: pressure too low (<<2>> < <<1>>)
		// The message to present when a split action is attempted on the the inventory, but
		// there are no empty slots available to fit the new pack.
		#kisLOC_00009 = Inventory is full, cannot split!
		// The message to present when an item, designed to be carried by an EVA kerbal, is
		// attempted to be put into a pod's seat inventory.
		#kisLOC_00010 = Carriable items cannot be stored in the seat's inventory
		// The message to present when an item is attempted to be placed on an EVA kerbal,
		// but there is another item already being carried.
		#kisLOC_00011 = Another part is already carried
		// The text to show in an inventory window in the editor to highlight the fact that
		// the items added there will only be availabe in the flight if the seat is occupied
		// at the launch.
		#kisLOC_00012 = The seat must be crewed at launch to acquire items
		// The name of the context menu item that removes kerbal's helmet if the environment
		// conditions allow it.
		#kisLOC_00013 = Remove Helmet
		// The name of the context menu item that pust the kerbal's helmet back.
		#kisLOC_00014 = Put On Helmet
		// The title of the window that represents an open pod's inventory in the editor.
		// Argument <<1>> is a name of the part that holds the inventory.
		// Argument <<2>> is a number of the seat to which the inventory belongs.
		#kisLOC_00015 = <<1>> | Seat <<2>>
		// The title of the window that represents an open kerbal's inventory.
		// Argument <<1>> is a name of the part that holds the inventory.
		// Argument <<2>> is a name of the kerbal.
		#kisLOC_00016 = <<1>> | <<2>>
		// The title of the window that represents an open parts's inventory in the flight.
		// This title is only used when the inventory has a custom name.
		// Argument <<1>> is a name of the part that holds the inventory.
		// Argument <<2>> is a custom name of the inventory.
		#kisLOC_00017 = <<1>> | <<2>>
		// The title of the window that shows a tooltip for the item being hovered over in
		// the open inventory.
		// Argument <<1>> is a name of the part item.
		// Argument <<2>> is a custom name of the inventory.
		#kisLOC_00018 = <<1>> | <<2>>
		// The title of the window that represents a context menu for a specific item in the
		// inventory.
		#kisLOC_00019 = Action
		// The caption of the button that accepts the changed inventory name. This button is
		// vary narrow, so keep the text as short as possible.
		#kisLOC_00020 = OK
		// The caption of the button that shows an input field to enter a custom name for an
		// inventory.
		#kisLOC_00021 = Set name
		// The caption of the button that closes the opened inventory dialog.
		#kisLOC_00022 = Close
		// The caption of the button that triggers the uneqip action on the item in the
		// inventory. The button is shown in a context menu of the selected item.
		#kisLOC_00023 = Unequip
		// The caption of the button that triggers the eqip action on the item in the
		// inventory. The button is shown in a context menu of the selected item.
		#kisLOC_00024 = Equip
		// The caption of the button that triggers the drop action on the item in the
		// inventory. The button is shown in a context menu of the selected item.
		#kisLOC_00025 = Drop
		// The caption of the button that extracts the specified number of items from the
		// selected inventory slot, and moves them into a new slot.
		// Argument <<1>> is the number of items to extract.
		#kisLOC_00026 = Split (<<1>>)
		// The text to show in the context menu of the selected inventory item that tells
		// how many items are in the slot.
		// Argument <<1>> is the number of items in the slot.
		#kisLOC_00027 = Quantity: <<1>>
		// The text to show in the context menu of the selected inventory item that tells
		// that no actions can be done on the item(s) in the slot.
		#kisLOC_00028 = No action
		// The name of the part's menu item that opens the inventory for a pod's seat.
		// Argument <<1>> is the number of seat.
		#kisLOC_00029 = Seat <<1>> inventory
		// The name of the part's menu item that opens the inventory of a specific kerbal.
		// Argument <<1>> is the first name of the kerbal.
		#kisLOC_00030 = <<1>>`s inventory
		// The name of the part's menu item that opens the associated inventory. The "part"
		// can be a kerbal.
		#kisLOC_00031 = Inventory
		// The name of the part's menu item that opens the associated inventory with a
		// custom name. The "part" can be a kerbal.
		// Argument <<1>> is a custom name of the inventory.
		#kisLOC_00032 = Inventory | <<1>>
		// The text to display in the inventory slot background to tell if the item is being
		// carried by the kerbal.
		#kisLOC_00033 = Carried
		// The text to display in the inventory slot background to tell if the item is being
		// equipped by the kerbal.
		#kisLOC_00034 = Equip.
		// The text to display in the inventory slot background to identify it.
		// Argument <<1>> is the number of the slot.
		#kisLOC_00035 = <<1>>
		// The text to display in the inventory slot background to tell ho many items are
		// stacked.
		// Argument <<1>> is the number of the items in the slot.
		#kisLOC_00036 = x<<1>>
		// The volume stat of the iventory in the main inventory window.
		// Argument <<1>> is the occupied volume of the inventory of type VolumeLType.
		// Argument <<2>> is the maximum volume of the inventory of type VolumeLType.
		#kisLOC_00037 = Volume: <<1>> / <<2>>
		// The total part mass in the main inventory window. It includes the combined mass
		// of all the items in the inventory.
		// Argument <<1>> is the total mass of type MassType.
		#kisLOC_00038 = Mass: <<1>>
		// The total part cost in the main inventory window. It includes the combined cost
		// of all the items in the inventory.
		// Argument <<1>> is the total cost of type CostType.
		#kisLOC_00039 = Cost: <<1>>
		// The volume of a single item in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the volume of type VolumeLType.
		#kisLOC_00040 = Volume: <<1>>
		// The mass of a single item in the inventory slot without the resources or the
		// contents. It's presented in a tooltip window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00041 = Dry mass: <<1>>
		// The mass of the resources in a single item in the inventory slot. It's presented
		// in a tooltip window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00042 = Resource mass: <<1>>
		// The cost of a single item in the inventory slot including the cost of the
		// resources. It's presented in a tooltip window.
		// Argument <<1>> is the cost of type CostType.
		#kisLOC_00043 = Cost: <<1>>
		// The cost of the contents of a single item in the inventory slot. It's presented
		// in a tooltip window.
		// Argument <<1>> is the cost of type CostType.
		#kisLOC_00044 = Contents cost: <<1>>
		// The mass of the contents of a single item in the inventory slot. It's presented
		// in a tooltip window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00045 = Contents mass: <<1>>
		// The total cost of the items in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the cost of type CostType.
		#kisLOC_00046 = Total cost: <<1>>
		// The total volume of the items in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the volume of type VolumeLType.
		#kisLOC_00047 = Total volume: <<1>>
		// The total mass of the items in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00048 = Total mass: <<1>>
		// The message to present in the tooltip window when the item has no resources.
		#kisLOC_00049 = Part has no resources
		// The information for the key that activates the equipped item. It's presented in a
		// tooltip window.
		// Argument <<1>> is the string name of the key as set in the settings file.
		#kisLOC_00051 = Press [<<1>>] to use (equipped)
		// The template to present the resources reserve in the item. It's presented in a
		// tooltip window.
		// Argument <<1>> is the resource name of type ResourceType.
		// Argument <<2>> is the current reserve of the resource.
		// Argument <<3>> is the maximum amount of the resource.
		#kisLOC_00052 = <<1>>: <<2>> / <<3>>
		// The template to present the science data stored in the item. It's presented in a
		// tooltip window.
		// Argument <<1>> is the science title.
		// Argument <<2>> is the science data amount.
		// Argument <<3>> is the value of the science data.
		#kisLOC_00053 = <<1>> (Data=<<2>>, Value=<<3>>)
		// The message to present in the tooltip window when the item has no science data.
		#kisLOC_00054 = Part has no science data
		// The title of the module to present in the editor details window.
		#kisLOC_00055 = KIS Inventory
		// The info string in the editor for the maximum allowed volume of the inventory.
		// Argument <<1>> is the voulme of type VolumeLType
		#kisLOC_00056 = Max Volume: <<1>>
		// The info string in the editor to present if kerbals can access the items in the
		// inventory when staying inside the vessel.
		#kisLOC_00057 = <color=#00FFFF>Can be accessed from inside</color>
		// The info string in the editor to present if kerbals cannot access the items in
		// the inventory when staying inside the vessel.
		#kisLOC_00058 = <color=#FFA500>Cannot be accessed from inside</color>
		// The info string in the editor to present if kerbals can access the items in the
		// inventory when going EVA.
		#kisLOC_00059 = <color=#00FFFF>Can be accessed from EVA</color>
		// The info string in the editor to present if kerbals cannot access the items in
		// the inventory when going EVA.
		#kisLOC_00060 = <color=#FFA500>Cannot be accessed from EVA</color>

		// ********** Type: KIS.ModuleKISItem, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_06000 = KIS Item
		// The info string to show in the editor to state that the item can be equipped on
		// the kerbal at the designated equip slot.
		// Argument <<1>> is a the slot name.
		#kisLOC_06001 = Equips on: <<1>>
		// The info string to show in the editor to state that the item can be carried by
		// the kerbal at the designated equip slot.
		// Argument <<1>> is a the slot name.
		#kisLOC_06002 = Carried on: <<1>>
		// The name for the left hand equip slot.
		#kisLOC_06003 = left hand
		// The name for the right hand equip slot.
		#kisLOC_06004 = right hand
		// The name for the jetpack equip slot.
		#kisLOC_06005 = jetpack
		// The name for the eye equip slot.
		#kisLOC_06006 = eyes
		// The name for the helmet equip slot.
		#kisLOC_06007 = helmet
		// The info string to show in the editor to state that the item can be attached to
		// another part without a need of any attach tool.
		#kisLOC_06008 = Attaches to the parts without a tool
		// The info string to show in the editor to state that the item CANNOT be attached
		// to another part.
		#kisLOC_06009 = <color=orange>Cannot be attached to the parts</color>
		// The info string to show in the editor to state that the item can be attached to
		// the surface without a need of any attach tool.
		#kisLOC_06010 = Attaches to the surface without a tool
		// The info string to show in the editor to state that the item can be attached to
		// the surface, but the appropriate tool will be needed.
		#kisLOC_06011 = The tool is need to attach to the surface
		// The info string to show in the editor to specify with what force the part will be
		// attached to the surface (if such attachment is allowed).
		#kisLOC_06012 = Surface attach strength: <<1>>
		// The info string to show in the editor to state that the item can be carried by
		// the kerbal. I.e. it attaches on the kerbal's model and doesn't take space in the
		// personal inventory.
		#kisLOC_06013 = Carrried by the kerbal
		// The info string to show in the editor to state that the item can be eqipped by
		// the kerbal. I.e. it attaches on the kerbal's model and reacts to the 'use'
		// hotkey.
		#kisLOC_06014 = Equippable item

		// ********** Type: KIS.ModuleKISItemAttachTool, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_04000 = KIS Attach Tool
		// The info message to present in the editor's details window to denote that this
		// tool can attach parts at the stack nodes.
		#kisLOC_04001 = <color=#00FFFF>Can attach to the stack nodes</color>
		// The info message to present in the editor's details window to denote that this
		// tool can attach the parts at the surface of another part, but not at the stack
		// nodes.
		#kisLOC_04002 = <color=orange>Can only attach to the part's surface</color>

		// ********** Type: KIS.ModuleKISItemBomb, KSP Events

		// The name of the context menu item to activate the bomb.
		#kisLOC_05009 = Activate
		// The name of the context menu item to open the bomb GUI setup window.
		#kisLOC_05010 = Setup

		// ********** Type: KIS.ModuleKISItemBomb, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_05000 = KIS Bomb
		// The info message to present in the editor's details window for the maximum radius
		// of explosion of the bomb.
		// Argument <<1>> is the radius. Format: DistanceType.
		#kisLOC_05001 = Max explosion radius: <<1>>
		// The title of the GUI window to setup the bomb.
		#kisLOC_05002 = Explosive - Setup
		// The GUI section title for settig up the explosion timer.
		#kisLOC_05003 = Timer
		// The string that displays number of seconds till the bomb trigger.
		#kisLOC_05004 = <<1>> s
		// The GUI section title for settig up the explosion area.
		#kisLOC_05005 = Explosion radius
		// The string that displays current setting of the explosion radius.
		// Argument <<1>> is the current radius. Format: DistanceType.
		// Argument <<2>> is the maximum allowed radius for the part. Format: DistanceType.
		#kisLOC_05006 = <<1>> / <<2>>
		// The caption on the button that starts the timer. It cannot be stopped!
		#kisLOC_05007 = ACTIVATE (cannot be undone)
		// The caption on the button that closes the setup menu without starting the timer
		#kisLOC_05008 = Close
		// The mesasge to display when the bomb is activated. It's show nonly once and
		// doesn't update as the bomb is ticking.
		// Argument <<1>> is the timer setting in seconds.
		#kisLOC_05011 = You have <<1>> seconds to escape!

		// ********** Type: KIS.ModuleKISItemBook, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_07000 = KIS Guide
		// The info message to present in the editor's details window to designate the fact
		// that this item is for the learning purposes only.
		#kisLOC_07001 = The last resort manual
		// The title for the window that shows the guide pages.
		#kisLOC_07002 = Reader
		// The caption on the button that navigates to the previous page.
		#kisLOC_07003 = Previous page
		// The caption on the button that navigates to the next page.
		#kisLOC_07004 = Next page
		// The caption on the button that closes the guide window.
		#kisLOC_07005 = Close
		// The string in the reader window that displays the current page number.
		// Argument <<1>> is the number of the current page.
		// Argument <<2>> is the total number of the pages.
		#kisLOC_07006 = Page <<1>> / <<2>>

		// ********** Type: KIS.ModuleKISItemEvaPropellant, KSPDev Messages

		// The message to present when the jetpack is attempted to be refilled, but its'
		// already full.
		#kisLOC_08000 = The jetpack is full. No need to refill
		// The message to present when the EVA kerbals has attempted to refill the jetpack,
		// but the tank is empty.
		#kisLOC_08001 = The canister is empty! Cannot refuel the jetpack
		// The message to present when a non-full tank has successfully refilled from the
		// pod's resource.
		#kisLOC_08002 = Fuel canister refilled
		// The message to present when the EVA kerbals has attempted to refill the jetpack,
		// but the tank didn't have enough fuel to fill the jetpack to full.
		#kisLOC_08003 = Not enough fuel in the canister. The jetpack is partially refueled
		// The message to present when the EVA kerbals has attempted to refill the jetpack,
		// and the jetpack has successfully refilled to full.
		#kisLOC_08004 = Jetpack fully refueled

		// ********** Type: KIS.ModuleKISItemSoundPlayer, KSPDev Messages

		// The name of the context menu item to start the playback.
		#kisLOC_09000 = Play
		// The name of the context menu item to stop the playback.
		#kisLOC_09001 = Stop

		// ********** Type: KIS.ModuleKISPartMount, KSP Actions

		// The name of the action to release the mounted part.
		#kisLOC_10001 = Release

		// ********** Type: KIS.ModuleKISPartMount, KSP Events

		// The name of the context menu item to release the mounted part.
		#kisLOC_10000 = Release
	}
}
